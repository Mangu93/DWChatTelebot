/usr/local/lib/python2.7/dist-packages/giphypop.py:233: UserWarning: You are using the giphy public api key. This should be used for testing only and may be deactivated in the future. See https://github.com/Giphy/GiphyAPI.
  warnings.warn('You are using the giphy public api key. This should be used for testing only '
Enviar Gif http://media0.giphy.com/media/5CW15VPv0Pbxe/200.gif
Enviar Gif http://media1.giphy.com/media/siREjlLKjdSZq/200.gif
Enviar Gif http://media3.giphy.com/media/c3Eis7H3cPYxa/200.gif
Enviar Gif http://media4.giphy.com/media/DJhPKzvUDUG5O/200.gif
Traceback (most recent call last):
  File "main.py", line 94, in <module>
    main()
  File "main.py", line 36, in main
    for update in bot.getUpdates(offset=LAST_UPDATE_ID, timeout=5):
  File "/usr/local/lib/python2.7/dist-packages/telegram/bot.py", line 126, in decorator
    result = func(self, *args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/telegram/bot.py", line 683, in getUpdates
    result = request.post(url, data)
  File "/usr/local/lib/python2.7/dist-packages/telegram/utils/request.py", line 93, in post
    result = urlopen(request).read()
  File "/usr/lib/python2.7/urllib2.py", line 127, in urlopen
    return _opener.open(url, data, timeout)
  File "/usr/lib/python2.7/urllib2.py", line 404, in open
    response = self._open(req, data)
  File "/usr/lib/python2.7/urllib2.py", line 422, in _open
    '_open', req)
  File "/usr/lib/python2.7/urllib2.py", line 382, in _call_chain
    result = func(*args)
  File "/usr/lib/python2.7/urllib2.py", line 1222, in https_open
    return self.do_open(httplib.HTTPSConnection, req)
  File "/usr/lib/python2.7/urllib2.py", line 1181, in do_open
    h.request(req.get_method(), req.get_selector(), req.data, headers)
  File "/usr/lib/python2.7/httplib.py", line 979, in request
    self._send_request(method, url, body, headers)
  File "/usr/lib/python2.7/httplib.py", line 1013, in _send_request
    self.endheaders(body)
  File "/usr/lib/python2.7/httplib.py", line 975, in endheaders
    self._send_output(message_body)
  File "/usr/lib/python2.7/httplib.py", line 835, in _send_output
    self.send(msg)
  File "/usr/lib/python2.7/httplib.py", line 797, in send
    self.connect()
  File "/usr/lib/python2.7/httplib.py", line 1182, in connect
    self.sock = ssl.wrap_socket(sock, self.key_file, self.cert_file)
  File "/usr/lib/python2.7/ssl.py", line 487, in wrap_socket
    ciphers=ciphers)
  File "/usr/lib/python2.7/ssl.py", line 243, in __init__
    self.do_handshake()
  File "/usr/lib/python2.7/ssl.py", line 405, in do_handshake
    self._sslobj.do_handshake()
KeyboardInterrupt
/usr/local/lib/python2.7/dist-packages/giphypop.py:233: UserWarning: You are using the giphy public api key. This should be used for testing only and may be deactivated in the future. See https://github.com/Giphy/GiphyAPI.
  warnings.warn('You are using the giphy public api key. This should be used for testing only '
Enviar Gif http://media4.giphy.com/media/oOxh7cvnnWo8M/200.gif
Traceback (most recent call last):
  File "main.py", line 95, in <module>
    main()
  File "main.py", line 36, in main
    for update in bot.getUpdates(offset=LAST_UPDATE_ID, timeout=5):
  File "/usr/local/lib/python2.7/dist-packages/telegram/bot.py", line 126, in decorator
    result = func(self, *args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/telegram/bot.py", line 683, in getUpdates
    result = request.post(url, data)
  File "/usr/local/lib/python2.7/dist-packages/telegram/utils/request.py", line 101, in post
    raise TelegramError(message)
telegram.error.TelegramError: Conflict: terminated by other long poll or webhook
/usr/local/lib/python2.7/dist-packages/giphypop.py:233: UserWarning: You are using the giphy public api key. This should be used for testing only and may be deactivated in the future. See https://github.com/Giphy/GiphyAPI.
  warnings.warn('You are using the giphy public api key. This should be used for testing only '
Enviar Gif http://media3.giphy.com/media/QAI2YD5rdRHnW/200.gif
Traceback (most recent call last):
  File "main.py", line 95, in <module>
    main()
  File "main.py", line 36, in main
    for update in bot.getUpdates(offset=LAST_UPDATE_ID, timeout=5):
  File "/usr/local/lib/python2.7/dist-packages/telegram/bot.py", line 126, in decorator
    result = func(self, *args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/telegram/bot.py", line 683, in getUpdates
    result = request.post(url, data)
  File "/usr/local/lib/python2.7/dist-packages/telegram/utils/request.py", line 93, in post
    result = urlopen(request).read()
  File "/usr/lib/python2.7/urllib2.py", line 127, in urlopen
    return _opener.open(url, data, timeout)
  File "/usr/lib/python2.7/urllib2.py", line 404, in open
    response = self._open(req, data)
  File "/usr/lib/python2.7/urllib2.py", line 422, in _open
    '_open', req)
  File "/usr/lib/python2.7/urllib2.py", line 382, in _call_chain
    result = func(*args)
  File "/usr/lib/python2.7/urllib2.py", line 1222, in https_open
    return self.do_open(httplib.HTTPSConnection, req)
  File "/usr/lib/python2.7/urllib2.py", line 1187, in do_open
    r = h.getresponse(buffering=True)
  File "/usr/lib/python2.7/httplib.py", line 1051, in getresponse
    response.begin()
  File "/usr/lib/python2.7/httplib.py", line 415, in begin
    version, status, reason = self._read_status()
  File "/usr/lib/python2.7/httplib.py", line 371, in _read_status
    line = self.fp.readline(_MAXLINE + 1)
  File "/usr/lib/python2.7/socket.py", line 476, in readline
    data = self._sock.recv(self._rbufsize)
  File "/usr/lib/python2.7/ssl.py", line 341, in recv
    return self.read(buflen)
  File "/usr/lib/python2.7/ssl.py", line 260, in read
    return self._sslobj.read(len)
KeyboardInterrupt
Traceback (most recent call last):
  File "main.py", line 109, in <module>
    main()
  File "main.py", line 47, in main
    reply_markup=reply_markup)
  File "/usr/local/lib/python2.7/dist-packages/telegram/bot.py", line 126, in decorator
    result = func(self, *args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/telegram/bot.py", line 158, in decorator
    result = request.post(url, data)
  File "/usr/local/lib/python2.7/dist-packages/telegram/utils/request.py", line 96, in post
    raise TelegramError('Unauthorized')
telegram.error.TelegramError: Unauthorized
